import React from "react";
import Head from "next/head";
import styles from "@/styles/Home.module.css";
import "bootstrap/dist/css/bootstrap.min.css";
import { Container, Col, Row, Button, Form } from "react-bootstrap";
import axios from "axios";
import { ReactTable } from "@/components/ReactTable";
import { Article } from "@/types/Article";
import { Loader } from "@/components/Loader";

export default function Home() {
  const queries = [
    {
      query: "oil",
    },
    {
      query: "gas",
    },
    {
      query: "web development",
    },
  ];
  const URL = process.env.NEXT_PUBLIC_URL;
  const API_KEY = process.env.NEXT_PUBLIC_API_KEY;
  const [query, setQuery] = React.useState(queries[0].query);
  const [searchValue, setSearchValue] = React.useState("");
  const [data, setData] = React.useState<Article[]>([]);
  const [isLoading, setIsLoading] = React.useState(true);
  const [searchingIn, setSearhingIn] = React.useState("OIL");
  const pageSize = 10;
  const subtractMonths = (date: Date, months: number) => {
    date.setMonth(date.getMonth() - months);
    return date;
  };
  let today = new Date().toJSON().slice(0, 10);
  const oneMonthAgo = subtractMonths(new Date(), 1).toJSON().slice(0, 10);

  const getNews = async (queryName: string, searchValue?: string) => {
    setIsLoading(true);
    const response = await axios.get(
      `${URL}?q=${queryName}${
        searchValue ? `+${searchValue}` : ""
      }&pageSize=${pageSize}&from=${oneMonthAgo}&to=${today}`,
      {
        headers: {
          Authorization: `${API_KEY}`,
        },
      }
    );
    setData(response.data.articles);
    setSearchValue("");
    setIsLoading(false);
  };

  React.useEffect(() => {
    getNews(query);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  return (
    <>
      <Head>
        <title>News Api Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {isLoading ? (
          <Loader />
        ) : (
          <Container>
            <Row>
              <Col>
                {/* QUERY BUTTONS */}

                {queries.map((i) => (
                  <Button
                    key={i.query}
                    className="me-3 buttons"
                    value={i.query}
                    onClick={() => {
                      setQuery(i.query);
                      getNews(i.query);
                      setSearhingIn(i.query.toUpperCase());
                    }}
                  >
                    {i.query.toUpperCase()}
                  </Button>
                ))}

                {/* FORM INPUT */}
                <Form
                  className="relative"
                  onSubmit={(e) => {
                    e.preventDefault();
                    getNews(query, searchValue);
                  }}
                >
                  <Form.Group className="mb-3 mt-4" controlId="formBasicEmail">
                    <Form.Control
                      type="text"
                      placeholder="Search..."
                      onChange={(e) => setSearchValue(e.target.value)}
                      value={searchValue}
                    />
                    <Form.Text className="text-light">
                      Searching in {searchingIn}
                    </Form.Text>
                  </Form.Group>

                  <Button className="buttons" type="submit">
                    Submit
                  </Button>
                </Form>

                {/* TABLE */}
                <ReactTable data={data} />
              </Col>
            </Row>
          </Container>
        )}
      </main>
    </>
  );
}
